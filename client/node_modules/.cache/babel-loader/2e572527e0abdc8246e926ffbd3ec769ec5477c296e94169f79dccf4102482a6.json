{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\UrbanCare\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { toast } from 'react-hot-toast';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  refreshToken: localStorage.getItem('refreshToken'),\n  loading: true,\n  isAuthenticated: false\n};\n\n// Auth reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'AUTH_START':\n      return {\n        ...state,\n        loading: true\n      };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        refreshToken: action.payload.refreshToken\n      };\n    case 'AUTH_FAIL':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        refreshToken: null\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        refreshToken: null\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await authAPI.getMe();\n          if (response.data.success) {\n            dispatch({\n              type: 'AUTH_SUCCESS',\n              payload: {\n                user: response.data.data.user,\n                token,\n                refreshToken: localStorage.getItem('refreshToken')\n              }\n            });\n          } else {\n            throw new Error('Failed to authenticate');\n          }\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          localStorage.removeItem('token');\n          localStorage.removeItem('refreshToken');\n          dispatch({\n            type: 'AUTH_FAIL'\n          });\n        }\n      } else {\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      dispatch({\n        type: 'AUTH_START'\n      });\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      if (response.data.success) {\n        const {\n          user,\n          token,\n          refreshToken\n        } = response.data.data;\n\n        // Store tokens in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('refreshToken', refreshToken);\n        dispatch({\n          type: 'AUTH_SUCCESS',\n          payload: {\n            user,\n            token,\n            refreshToken\n          }\n        });\n        toast.success('Login successful!');\n        return {\n          success: true,\n          user\n        };\n      } else {\n        throw new Error(response.data.message || 'Login failed');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      dispatch({\n        type: 'AUTH_FAIL'\n      });\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      dispatch({\n        type: 'AUTH_START'\n      });\n      const response = await authAPI.register(userData);\n      if (response.data.success) {\n        const {\n          user,\n          token,\n          refreshToken\n        } = response.data.data;\n\n        // Store tokens in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('refreshToken', refreshToken);\n        dispatch({\n          type: 'AUTH_SUCCESS',\n          payload: {\n            user,\n            token,\n            refreshToken\n          }\n        });\n        toast.success('Registration successful! Please check your email for verification.');\n        return {\n          success: true,\n          user\n        };\n      } else {\n        throw new Error(response.data.message || 'Registration failed');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      dispatch({\n        type: 'AUTH_FAIL'\n      });\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Remove tokens from localStorage\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      dispatch({\n        type: 'LOGOUT'\n      });\n      toast.success('Logged out successfully');\n    }\n  };\n\n  // Update user profile\n  const updateUser = userData => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: userData\n    });\n  };\n\n  // Forgot password\n  const forgotPassword = async email => {\n    try {\n      const response = await authAPI.forgotPassword({\n        email\n      });\n      if (response.data.success) {\n        toast.success('Password reset link sent to your email');\n        return {\n          success: true\n        };\n      } else {\n        throw new Error(response.data.message || 'Failed to send reset email');\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message || 'Failed to send reset email';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Reset password\n  const resetPassword = async (token, password) => {\n    try {\n      const response = await authAPI.resetPassword(token, {\n        password\n      });\n      if (response.data.success) {\n        toast.success('Password reset successful! Please login with your new password.');\n        return {\n          success: true\n        };\n      } else {\n        throw new Error(response.data.message || 'Password reset failed');\n      }\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || error.message || 'Password reset failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Verify email\n  const verifyEmail = async token => {\n    try {\n      const response = await authAPI.verifyEmail(token);\n      if (response.data.success) {\n        toast.success('Email verified successfully!');\n        return {\n          success: true\n        };\n      } else {\n        throw new Error(response.data.message || 'Email verification failed');\n      }\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || error.message || 'Email verification failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n    forgotPassword,\n    resetPassword,\n    verifyEmail\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","toast","jsxDEV","_jsxDEV","initialState","user","token","localStorage","getItem","refreshToken","loading","isAuthenticated","authReducer","state","action","type","payload","AuthContext","AuthProvider","children","_s","dispatch","checkAuth","response","getMe","data","success","Error","error","console","removeItem","login","email","password","setItem","message","_error$response","_error$response$data","register","userData","_error$response2","_error$response2$data","logout","updateUser","forgotPassword","_error$response3","_error$response3$data","resetPassword","_error$response4","_error$response4$data","verifyEmail","_error$response5","_error$response5$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["D:/projects/UrbanCare/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\nimport { toast } from 'react-hot-toast';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  refreshToken: localStorage.getItem('refreshToken'),\r\n  loading: true,\r\n  isAuthenticated: false,\r\n};\r\n\r\n// Auth reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'AUTH_START':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case 'AUTH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        refreshToken: action.payload.refreshToken,\r\n      };\r\n    case 'AUTH_FAIL':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        refreshToken: null,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        refreshToken: null,\r\n      };\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload },\r\n      };\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (token) {\r\n        try {\r\n          const response = await authAPI.getMe();\r\n          if (response.data.success) {\r\n            dispatch({\r\n              type: 'AUTH_SUCCESS',\r\n              payload: {\r\n                user: response.data.data.user,\r\n                token,\r\n                refreshToken: localStorage.getItem('refreshToken'),\r\n              },\r\n            });\r\n          } else {\r\n            throw new Error('Failed to authenticate');\r\n          }\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('refreshToken');\r\n          dispatch({ type: 'AUTH_FAIL' });\r\n        }\r\n      } else {\r\n        dispatch({ type: 'SET_LOADING', payload: false });\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      dispatch({ type: 'AUTH_START' });\r\n      \r\n      const response = await authAPI.login({ email, password });\r\n      \r\n      if (response.data.success) {\r\n        const { user, token, refreshToken } = response.data.data;\r\n        \r\n        // Store tokens in localStorage\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('refreshToken', refreshToken);\r\n        \r\n        dispatch({\r\n          type: 'AUTH_SUCCESS',\r\n          payload: { user, token, refreshToken },\r\n        });\r\n        \r\n        toast.success('Login successful!');\r\n        return { success: true, user };\r\n      } else {\r\n        throw new Error(response.data.message || 'Login failed');\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: 'AUTH_FAIL' });\r\n      const message = error.response?.data?.message || error.message || 'Login failed';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      dispatch({ type: 'AUTH_START' });\r\n      \r\n      const response = await authAPI.register(userData);\r\n      \r\n      if (response.data.success) {\r\n        const { user, token, refreshToken } = response.data.data;\r\n        \r\n        // Store tokens in localStorage\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('refreshToken', refreshToken);\r\n        \r\n        dispatch({\r\n          type: 'AUTH_SUCCESS',\r\n          payload: { user, token, refreshToken },\r\n        });\r\n        \r\n        toast.success('Registration successful! Please check your email for verification.');\r\n        return { success: true, user };\r\n      } else {\r\n        throw new Error(response.data.message || 'Registration failed');\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: 'AUTH_FAIL' });\r\n      const message = error.response?.data?.message || error.message || 'Registration failed';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    try {\r\n      await authAPI.logout();\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      // Remove tokens from localStorage\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('refreshToken');\r\n      \r\n      dispatch({ type: 'LOGOUT' });\r\n      toast.success('Logged out successfully');\r\n    }\r\n  };\r\n\r\n  // Update user profile\r\n  const updateUser = (userData) => {\r\n    dispatch({ type: 'UPDATE_USER', payload: userData });\r\n  };\r\n\r\n  // Forgot password\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      const response = await authAPI.forgotPassword({ email });\r\n      \r\n      if (response.data.success) {\r\n        toast.success('Password reset link sent to your email');\r\n        return { success: true };\r\n      } else {\r\n        throw new Error(response.data.message || 'Failed to send reset email');\r\n      }\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || error.message || 'Failed to send reset email';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Reset password\r\n  const resetPassword = async (token, password) => {\r\n    try {\r\n      const response = await authAPI.resetPassword(token, { password });\r\n      \r\n      if (response.data.success) {\r\n        toast.success('Password reset successful! Please login with your new password.');\r\n        return { success: true };\r\n      } else {\r\n        throw new Error(response.data.message || 'Password reset failed');\r\n      }\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || error.message || 'Password reset failed';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Verify email\r\n  const verifyEmail = async (token) => {\r\n    try {\r\n      const response = await authAPI.verifyEmail(token);\r\n      \r\n      if (response.data.success) {\r\n        toast.success('Email verified successfully!');\r\n        return { success: true };\r\n      } else {\r\n        throw new Error(response.data.message || 'Email verification failed');\r\n      }\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || error.message || 'Email verification failed';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateUser,\r\n    forgotPassword,\r\n    resetPassword,\r\n    verifyEmail,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}